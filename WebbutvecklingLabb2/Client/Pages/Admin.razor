@page "/admin"
@attribute [Authorize(Roles = "Admin")]
@using WebbutvecklingLabb2.Shared.DTOs
@using Microsoft.AspNetCore.Authorization

@inject HttpClient HttpClient
@inject NavigationManager NavigationManager

<div class="container">
    <label>Search by E-Mail</label>
    <InputText @bind-Value="SearchString" @oninput="GetSearchFilterResult"></InputText>
</div>

<div class="container">
    <table class="table">
        <thead>
        <tr>
            <th>E-Mail</th>
            <th>First Name</th>
            <th>Last Name</th>
            <th>Country</th>
            <th>City</th>
            <th>Postal Code</th>
            <th>Address</th>
            <th>Phone Number</th>
        </tr>
        </thead>
        <tbody>
        <Virtualize Items="FilteredCustomerList" Context="customer">
            <tr>
                <td class="align-middle">
                    @customer.EMail
                </td>
                <td class="align-middle">
                    @customer.FirstName
                </td>
                <td class="align-middle">
                    @customer.LastName
                </td>
                <td class="align-middle">
                    @customer.Country
                </td>
                <td class="align-middle">
                    @customer.City
                </td>
                <td class="align-middle">
                    @customer.PostalCode
                </td>
                <td class="align-middle">
                    @customer.Address
                </td>
                <td class="align-middle">
                    @customer.PhoneNumber
                </td>
            </tr>
        </Virtualize>
        </tbody>
    </table>
</div>
<div class="container">
    <button class="btn btn-primary" @onclick="OrderNavigateButton">Orders</button>
</div>


@code {
    private List<CustomerDto>? CustomerList { get; set; } = new();
    private List<CustomerDto>? FilteredCustomerList { get; set; } = new();
    private string SearchString { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        CustomerList = await HttpClient.GetFromJsonAsync<List<CustomerDto>>("customers");
        FilteredCustomerList = CustomerList;
        await base.OnInitializedAsync();
    }

    private void GetSearchFilterResult(ChangeEventArgs obj)
    {
        SearchString = obj.Value.ToString();
        FilteredCustomerList = CustomerList.FindAll(c => c.EMail.ToLower().Contains(SearchString.ToLower()));
    }

    private void OrderNavigateButton()
    {
        NavigationManager.NavigateTo("admin/orders");
    }

}